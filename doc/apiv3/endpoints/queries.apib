# Group Queries

A query defines how work packages can be filtered and displayed. Clients can define a query once, store it, and use it later on to load the same set of filters.

## Actions

| Link                | Description                                                          | Condition                              |
|:-------------------:|----------------------------------------------------------------------| ---------------------------------------|

As of now, no actions are defined.

## Linked Properties

| Property         | Description                                                                                                                       | Type                  | Constraints                      | Supported operations |
| :--------------: | ------------------------------------------------------                                                                            | -----------           | -------------------------------- | -------------------- |
| self             | This query                                                                                                                        | Query                 | not null                         | READ                 |
| user             | The user that owns this query                                                                                                     | User                  | not null                         | READ                 |
| project          | The project on which this query operates                                                                                          | Project               |                                  | READ                 |
| columns          | Ordered list of QueryColumns. The columns, when maped to WorkPackage properties determine which WorkPackage properties to display | []QueryColumn         |                                  | READ                 |
| sortBy           | Ordered list of QuerySortBys. Indicates the WorkPackage property the results will be ordered by as well as the direction          | []QuerySortBy         |                                  | READ                 |
| groupBy          | The WorkPackage property results of this query are grouped by                                                                     | String                |                                  | READ                 |
| results          | The list of work packages returned by applying the filters, sorting and grouping defined in the query                             | WorkPackageCollection |                                  | READ                 |

Please note, that all the properties listed above will also be embedded when individual queries are returned but will not be embedded when a list of queries is returned. Whether the properties are embedded or not may be subject to change in the future.

## Local Properties

| Property         | Description                                                                                               | Type                  | Constraints                      | Supported operations |
| :--------------: | ------------------------------------------------------                                                    | -----------           | -------------------------------- | -------------------- |
| id               | Query id                                                                                                  | Integer               | x > 0                            | READ                 |
| name             | Query name                                                                                                | String                |                                  | READ                 |
| filters          | A set of QueryFilters which will be applied to the work packages to determine the resulting work packages | []QueryFilterInstance |                                  | READ                 |
| sums             | Should sums (of supported properties) be shown?                                                           | Boolean               |                                  | READ                 |
| public           | Can users besides the owner see the query?                                                                | Boolean               |                                  | READ                 |
| starred          | Should the query be highlighted to the user?                                                              | Boolean               |                                  | READ                 |

A query that is not assigned to a project (`"project": null`) is called a global query. Global queries filter work packages regarless of the project they are assigned to. As such, a different set of filters exists for those queries.

## Query Filter Instance

A QueryFilterInstance defines a filtering applied to the list of work packages. As such it contains of:
* the filter type (`QueryFilter`) used
* the operator (`QueryOperator`) used
* the list of values

The list of values can either consist of a list of links or of a list of strings. If the values are primitive (e.g. Integer, Boolean, Date) they will be displayed as strings and the QueryFilterInstance will have a `values` property.

```
  {
    "_type": "DueDateQueryFilter",
    "name": "Due date",
    "values": [
      "1"
    ],
    "_links": {
      "filter": {
        "href": "/api/v3/queries/filters/dueDate",
        "title": "Due date"
      },
      "operator": {
        "href": "/api/v3/queries/operators/<t+",
        "title": "in less than"
      }
    }
  }
```

If the values are nonprimitive (e.g. User, Project), they will be listed as objects and the QueryFilterInstance will have a `values` link.
```
  {
    "_type": "AssigneeQueryFilter",
    "name": "Assignee",
    "_links": {
      "filter": {
        "href": "/api/v3/queries/filters/assignee",
        "title": "Assignee"
      },
      "operator": {
        "href": "/api/v3/queries/operators/=",
        "title": "is"
      },
      "values": [
        {
          "href": "/api/v3/users/1",
          "title": "OpenProject Admin"
        }
      ]
    }
  }

```

## Query [/api/v3/queries/{id}{?offset,pageSize,filters,sortBy,groupBy,showSums}]

+ Model
    + Body

            {
              "_type": "Query",
              "id": 9,
              "name": "fdsfdsfdsf",
              "filters": [
                {
                  "_type": "StatusQueryFilter",
                  "name": "Status",
                  "_links": {
                    "filter": {
                      "href": "/api/v3/queries/filters/status",
                      "title": "Status"
                    },
                    "operator": {
                      "href": "/api/v3/queries/operators/o",
                      "title": "open"
                    },
                    "values": []
                  }
                },
                {
                  "_type": "DueDateQueryFilter",
                  "name": "Due date",
                  "values": [
                    "1"
                  ],
                  "_links": {
                    "filter": {
                      "href": "/api/v3/queries/filters/dueDate",
                      "title": "Due date"
                    },
                    "operator": {
                      "href": "/api/v3/queries/operators/<t+",
                      "title": "in less than"
                    }
                  }
                }
              ],
              "public": false,
              "sums": false,
              "starred": false,
              "_embedded": {
                "results": {
                  "_type": "WorkPackageCollection",
                  "total": 234,
                  "count": 30,
                  "pageSize": 2,
                  "offset": 1,
                  "_embedded": {
                    "elements": [
                      "<--- shortened for brevity --->"
                    ]
                  },
                  "_links": {
                    "self": {
                      "href": "/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D"
                    },
                    "jumpTo": {
                      "href": "/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D",
                      "templated": true
                    },
                    "changeSize": {
                      "href": "/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D",
                      "templated": true
                    },
                    "createWorkPackage": {
                      "href": "/api/v3/work_packages/form",
                      "method": "post"
                    },
                    "createWorkPackageImmediate": {
                      "href": "/api/v3/work_packages",
                      "method": "post"
                    }
                  }
                }
              },
              "_links": {
                "self": {
                  "href": "/api/v3/queries/9",
                  "title": "fdsfdsfdsf"
                },
                "results": {
                  "href": "/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D"
                },
                "columns": [
                  {
                    "href": "/api/v3/queries/columns/id",
                    "title": "ID"
                  },
                  {
                    "href": "/api/v3/queries/columns/subject",
                    "title": "Subject"
                  },
                  {
                    "href": "/api/v3/queries/columns/type",
                    "title": "Type"
                  },
                  {
                    "href": "/api/v3/queries/columns/status",
                    "title": "Status"
                  },
                  {
                    "href": "/api/v3/queries/columns/priority",
                    "title": "Priority"
                  },
                  {
                    "href": "/api/v3/queries/columns/assignee",
                    "title": "Assignee"
                  },
                  {
                    "href": "/api/v3/queries/columns/updated_at",
                    "title": "Updated on"
                  }
                ],
                "groupBy": {
                  "href": null,
                  "title": null
                },
                "sortBy": [
                  {
                    "href": "/api/v3/queries/sort_bys/parent-desc",
                    "title": "Parent (Descending)"
                  }
                ],
                "user": {
                  "href": "/api/v3/users/1",
                  "title": "OpenProject Admin"
                },
                "project": {
                  "href": "/api/v3/projects/3",
                  "title": "copy"
                }
              }
            }

## View query [GET]

Retreive an individual query as identified by the id parameter. Then end point accepts a number of parameters that can be used to override the resources' persisted parameters.

+ Parameters
    + id (required, integer, `1`) ... Query id
    + filters (optional, string, `[{ "assignee": { "operator": "=", "values": ["1", "5"] }" }]`) ... JSON specifying filter conditions. The filters provided as parameters are not applied to the query but are instead used to override the query's persisted filters. All filters also accepted by the work packages endpoint are accepted.
    + offset = `1` (optional, integer, `25`) ... Page number inside the queries' result collection of work packages.
    + pageSize (optional, integer, `25`) ... Number of elements to display per page for the queries' result collection of work packages.
    + sortBy (optional, string, `[["status", "asc"]]`) ... JSON specifying sort criteria. The sort criteria is applied to the querie's result collection of work packages overriding the query's persisted sort criteria.
    + groupBy (optional, string, `status`) ... The column to group by. The grouping criteria is applied to the to the querie's result collection of work packages overriding the query's persisted group criteria.
    + showSums = `false` (optional, boolean, `true`) ... Indicates whether properties should be summed up if they support it. The showSums parameter is applied to the to the querie's result collection of work packages overriding the query's persisted sums property.

+ Response 200 (application/hal+json)

    [Query][]

+ Response 404 (application/hal+json)

    Returned if the query does not exist or the client does not have sufficient permissions to see it.

    **Required condition:** query belongs to user or query is public

    **Required permission:** view work package in queries project

    + Body

            {
                "_type": "Error",
                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                "message": "The specified query does not exist."
            }

## Delete query [DELETE]

Delete the query identified by the id parameter

+ Parameters
    + id (required, integer, `1`) ... Query id

+ Response 204

+ Response 403 (application/hal+json)

    Returned if the client does not have sufficient permissions.

    **Required permission:** for own queries none; for public queries: manage public queries

    *Note that you will only receive this error, if you are at least allowed to see the corresponding query.*

    + Body

            {
                "_type": "Error",
                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                "message": "You are not authorized to access this resource."
            }

+ Response 404 (application/hal+json)

    Returned if the query does not exist or the client does not have sufficient permissions to see it.

    **Required condition:** query belongs to user or query is public

    **Required permission:** view work package in queries project

    + Body

            {
                "_type": "Error",
                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                "message": "The requested resource could not be found."
            }

## Star Query [/api/v3/queries/{id}/star]

+ Model
    + Body

            {
              "_type": "Query",
              "id": 9,
              "name": "fdsfdsfdsf",
              "filters": [
                {
                  "_type": "StatusQueryFilter",
                  "name": "Status",
                  "_links": {
                    "filter": {
                      "href": "/api/v3/queries/filters/status",
                      "title": "Status"
                    },
                    "operator": {
                      "href": "/api/v3/queries/operators/o",
                      "title": "open"
                    },
                    "values": []
                  }
                },
                {
                  "_type": "DueDateQueryFilter",
                  "name": "Due date",
                  "values": [
                    "1"
                  ],
                  "_links": {
                    "filter": {
                      "href": "/api/v3/queries/filters/dueDate",
                      "title": "Due date"
                    },
                    "operator": {
                      "href": "/api/v3/queries/operators/<t+",
                      "title": "in less than"
                    }
                  }
                }
              ],
              "public": false,
              "sums": false,
              "starred": true,
              "_embedded": {
                "results": {
                  "_type": "WorkPackageCollection",
                  "total": 234,
                  "count": 30,
                  "pageSize": 2,
                  "offset": 1,
                  "_embedded": {
                    "elements": [
                      "<--- shortened for brevity --->"
                    ]
                  },
                  "_links": {
                    "self": {
                      "href": "/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D"
                    },
                    "jumpTo": {
                      "href": "/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D",
                      "templated": true
                    },
                    "changeSize": {
                      "href": "/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D",
                      "templated": true
                    },
                    "createWorkPackage": {
                      "href": "/api/v3/work_packages/form",
                      "method": "post"
                    },
                    "createWorkPackageImmediate": {
                      "href": "/api/v3/work_packages",
                      "method": "post"
                    }
                  }
                }
              },
              "_links": {
                "self": {
                  "href": "/api/v3/queries/9",
                  "title": "fdsfdsfdsf"
                },
                "results": {
                  "href": "/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D"
                },
                "columns": [
                  {
                    "href": "/api/v3/queries/columns/id",
                    "title": "ID"
                  },
                  {
                    "href": "/api/v3/queries/columns/subject",
                    "title": "Subject"
                  },
                  {
                    "href": "/api/v3/queries/columns/type",
                    "title": "Type"
                  },
                  {
                    "href": "/api/v3/queries/columns/status",
                    "title": "Status"
                  },
                  {
                    "href": "/api/v3/queries/columns/priority",
                    "title": "Priority"
                  },
                  {
                    "href": "/api/v3/queries/columns/assignee",
                    "title": "Assignee"
                  },
                  {
                    "href": "/api/v3/queries/columns/updated_at",
                    "title": "Updated on"
                  }
                ],
                "groupBy": {
                  "href": null,
                  "title": null
                },
                "sortBy": [
                  {
                    "href": "/api/v3/queries/sort_bys/parent-desc",
                    "title": "Parent (Descending)"
                  }
                ],
                "user": {
                  "href": "/api/v3/users/1",
                  "title": "OpenProject Admin"
                },
                "project": {
                  "href": "/api/v3/projects/3",
                  "title": "copy"
                }
              }
            }

## Star query [PATCH]

+ Parameters
    + id (required, integer, `1`) ... Query id

+ Response 200 (application/hal+json)

    [Star Query][]

+ Response 400 (application/hal+json)

    Occurs when the client did not send an empty request body.

    + Body

            {
                "_type": "Error",
                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                "message": "The request body was not empty."
            }

+ Response 403 (application/hal+json)

    Returned if the client does not have sufficient permissions.

    **Required permission:** for own queries none; for public queries: manage public queries

    *Note that you will only receive this error, if you are at least allowed to see the corresponding query.*

    + Body

            {
                "_type": "Error",
                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                "message": "You are not allowed to star this query."
            }

+ Response 404 (application/hal+json)

    Returned if the query does not exist or the client does not have sufficient permissions to see it.

    **Required condition:** query belongs to user or query is public

    **Required permission:** view work package in queries project

    + Body

            {
                "_type": "Error",
                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                "message": "The specified query does not exist."
            }

## Unstar Query [/api/v3/queries/{id}/unstar]

+ Model
    + Body

            {
              "_type": "Query",
              "id": 9,
              "name": "fdsfdsfdsf",
              "filters": [
                {
                  "_type": "StatusQueryFilter",
                  "name": "Status",
                  "_links": {
                    "filter": {
                      "href": "/api/v3/queries/filters/status",
                      "title": "Status"
                    },
                    "operator": {
                      "href": "/api/v3/queries/operators/o",
                      "title": "open"
                    },
                    "values": []
                  }
                },
                {
                  "_type": "DueDateQueryFilter",
                  "name": "Due date",
                  "values": [
                    "1"
                  ],
                  "_links": {
                    "filter": {
                      "href": "/api/v3/queries/filters/dueDate",
                      "title": "Due date"
                    },
                    "operator": {
                      "href": "/api/v3/queries/operators/<t+",
                      "title": "in less than"
                    }
                  }
                }
              ],
              "public": false,
              "sums": false,
              "starred": false,
              "_embedded": {
                "results": {
                  "_type": "WorkPackageCollection",
                  "total": 234,
                  "count": 30,
                  "pageSize": 2,
                  "offset": 1,
                  "_embedded": {
                    "elements": [
                      "<--- shortened for brevity --->"
                    ]
                  },
                  "_links": {
                    "self": {
                      "href": "/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D"
                    },
                    "jumpTo": {
                      "href": "/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D",
                      "templated": true
                    },
                    "changeSize": {
                      "href": "/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D",
                      "templated": true
                    },
                    "createWorkPackage": {
                      "href": "/api/v3/work_packages/form",
                      "method": "post"
                    },
                    "createWorkPackageImmediate": {
                      "href": "/api/v3/work_packages",
                      "method": "post"
                    }
                  }
                }
              },
              "_links": {
                "self": {
                  "href": "/api/v3/queries/9",
                  "title": "fdsfdsfdsf"
                },
                "results": {
                  "href": "/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D"
                },
                "columns": [
                  {
                    "href": "/api/v3/queries/columns/id",
                    "title": "ID"
                  },
                  {
                    "href": "/api/v3/queries/columns/subject",
                    "title": "Subject"
                  },
                  {
                    "href": "/api/v3/queries/columns/type",
                    "title": "Type"
                  },
                  {
                    "href": "/api/v3/queries/columns/status",
                    "title": "Status"
                  },
                  {
                    "href": "/api/v3/queries/columns/priority",
                    "title": "Priority"
                  },
                  {
                    "href": "/api/v3/queries/columns/assignee",
                    "title": "Assignee"
                  },
                  {
                    "href": "/api/v3/queries/columns/updated_at",
                    "title": "Updated on"
                  }
                ],
                "groupBy": {
                  "href": null,
                  "title": null
                },
                "sortBy": [
                  {
                    "href": "/api/v3/queries/sort_bys/parent-desc",
                    "title": "Parent (Descending)"
                  }
                ],
                "user": {
                  "href": "/api/v3/users/1",
                  "title": "OpenProject Admin"
                },
                "project": {
                  "href": "/api/v3/projects/3",
                  "title": "copy"
                }
              }
            }

## Unstar query [PATCH]

+ Parameters
    + id (required, integer, `1`) ... Query id

+ Response 200 (application/hal+json)

    [Unstar Query][]

+ Response 400 (application/hal+json)

    Occurs when the client did not send an empty request body.

    + Body

            {
                "_type": "Error",
                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                "message": "The request body was not empty."
            }

+ Response 403 (application/hal+json)

    Returned if the client does not have sufficient permissions.

    **Required permission:** for own queries none; for public queries: manage public queries

    *Note that you will only receive this error, if you are at least allowed to see the corresponding query.*

    + Body

            {
                "_type": "Error",
                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                "message": "You are not allowed to unstar this query."
            }

+ Response 404 (application/hal+json)

    Returned if the query does not exist or the client does not have sufficient permissions to see it.

    **Required condition:** query belongs to user or query is public

    **Required permission:** view work package in queries project

    + Body

            {
                "_type": "Error",
                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                "message": "The specified query does not exist."
            }

##Queries [/api/v3/queries{?filters}]

+ Model
    + Body

            {
                "_links":
                {
                    "self":
                    {
                        "href": "/api/v3/queries"
                    }
                },
                "total": 1,
                "count": 1,
                "_type": "Collection",
                "_embedded":
                {
                    "elements": [
                        {
                          "_type": "Query",
                          "id": 9,
                          "name": "fdsfdsfdsf",
                          "filters": [
                            {
                              "_type": "StatusQueryFilter",
                              "name": "Status",
                              "_links": {
                                "filter": {
                                  "href": "/api/v3/queries/filters/status",
                                  "title": "Status"
                                },
                                "operator": {
                                  "href": "/api/v3/queries/operators/o",
                                  "title": "open"
                                },
                                "values": []
                              }
                            },
                            {
                              "_type": "DueDateQueryFilter",
                              "name": "Due date",
                              "values": [
                                "1"
                              ],
                              "_links": {
                                "filter": {
                                  "href": "/api/v3/queries/filters/dueDate",
                                  "title": "Due date"
                                },
                                "operator": {
                                  "href": "/api/v3/queries/operators/<t+",
                                  "title": "in less than"
                                }
                              }
                            }
                          ],
                          "public": false,
                          "sums": false,
                          "starred": true,
                          "_embedded": {
                            "results": {
                              "_type": "WorkPackageCollection",
                              "total": 234,
                              "count": 30,
                              "pageSize": 2,
                              "offset": 1,
                              "_embedded": {
                                "elements": [
                                  "<--- shortened for brevity --->"
                                ]
                              },
                              "_links": {
                                "self": {
                                  "href": "/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D"
                                },
                                "jumpTo": {
                                  "href": "/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D",
                                  "templated": true
                                },
                                "changeSize": {
                                  "href": "/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D",
                                  "templated": true
                                },
                                "createWorkPackage": {
                                  "href": "/api/v3/work_packages/form",
                                  "method": "post"
                                },
                                "createWorkPackageImmediate": {
                                  "href": "/api/v3/work_packages",
                                  "method": "post"
                                }
                              }
                            }
                          },
                          "_links": {
                            "self": {
                              "href": "/api/v3/queries/9",
                              "title": "fdsfdsfdsf"
                            },
                            "results": {
                              "href": "/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D"
                            },
                            "columns": [
                              {
                                "href": "/api/v3/queries/columns/id",
                                "title": "ID"
                              },
                              {
                                "href": "/api/v3/queries/columns/subject",
                                "title": "Subject"
                              },
                              {
                                "href": "/api/v3/queries/columns/type",
                                "title": "Type"
                              },
                              {
                                "href": "/api/v3/queries/columns/status",
                                "title": "Status"
                              },
                              {
                                "href": "/api/v3/queries/columns/priority",
                                "title": "Priority"
                              },
                              {
                                "href": "/api/v3/queries/columns/assignee",
                                "title": "Assignee"
                              },
                              {
                                "href": "/api/v3/queries/columns/updated_at",
                                "title": "Updated on"
                              }
                            ],
                            "groupBy": {
                              "href": null,
                              "title": null
                            },
                            "sortBy": [
                              {
                                "href": "/api/v3/queries/sort_bys/parent-desc",
                                "title": "Parent (Descending)"
                              }
                            ],
                            "user": {
                              "href": "/api/v3/users/1",
                              "title": "OpenProject Admin"
                            },
                            "project": {
                              "href": "/api/v3/projects/3",
                              "title": "copy"
                            }
                          }
                        }
                    ]
                }
            }

## List queries [GET]

Returns a collection of queries. The collection can be filtered via query parameters similar to how work packages are filtered. Please note however, that the filters are applied to the queries and not to the work packages the queries in turn might return.

+ Parameters
    + filters (optional, string, `[{ "project_id": { "operator": "!*", "values": null }" }]`) ... JSON specifying filter conditions.
    Accepts the same format as returned by the [queries](#queries) endpoint.
    Currently supported filters are:
      + project: filters queries by the project they are assigned to. If the project filter is passed with the `!*` (not any) operator, global queries are returned.

+ Response 200 (application/hal+json)

    [Queries][]

+ Response 403 (application/hal+json)

    Returned if the client does not have sufficient permissions to see queries.

    **Required permission:** view work packages or manage public queries in any project

    + Body

            {
                "_type": "Error",
                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                "message": "You are not allowed to see the queries."
            }

# Group Query Columns

A QueryColumn can be referenced by a Query to denote the work package properties the client should display for the work packages returned as query results. The columns maps to the WorkPackage by the id property.

## Actions

| Link                | Description                                                          | Condition                              |
|:-------------------:|----------------------------------------------------------------------| ---------------------------------------|

As of now, no actions are defined.

## Linked Properties

| Property         | Description                                            | Type        | Constraints                      | Supported operations |
| :--------------: | ------------------------------------------------------ | ----------- | -------------------------------- | -------------------- |
| self             | This query column                                      | QueryColumn | not null                         | READ                 |

## Local Properties

| Property         | Description                                            | Type        | Constraints                      | Supported operations |
| :--------------: | ------------------------------------------------------ | ----------- | -------------------------------- | -------------------- |
| id               | Query column id                                        | String      | not null                         | READ                 |
| name             | Query column name                                      | String      | not null                         | READ                 |

## Query Column [/api/v3/queries/columns/{id}]

+ Model
    + Body

            {
              "_type": "QueryColumn",
              "id": "priority",
              "name": "Priority",
              "_links": {
                "self": {
                  "href": "/api/v3/queries/columns/priority",
                  "title": "Priority"
                }
              }
            }

## View Query Column [GET]

Retreive an individual QueryColumn as identified by the `id` parameter.

+ Parameters
    + id (required, string, `priority`) ... QueryColumn id

+ Response 200 (application/hal+json)

    [Query Column][]

+ Response 403 (application/hal+json)

    Returned if the client does not have sufficient permissions to see it.

    **Required permission:** view work package in any project

    + Body

            {
                "_type": "Error",
                "errorIdentifier": "urn:openproject-org:api:v3:errors:Unauthenticated",
                "message": "You need to be authenticated to access this resource."
            }

+ Response 404 (application/hal+json)

    Returned if the QueryColumn does not exist.

    + Body

            {
                "_type": "Error",
                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                "message": "The specified query does not exist."
            }

# Group Query Filters

A QueryFilter can be referenced by a filter instance defined for a Query to denote the filtering applied to the query's work package results. This resource is not an instance of an applicable filter but rather the type an applicable filter can have.

## Actions

| Link                | Description                                                          | Condition                              |
|:-------------------:|----------------------------------------------------------------------| ---------------------------------------|

As of now, no actions are defined.

## Linked Properties

| Property         | Description                                            | Type        | Constraints                      | Supported operations |
| :--------------: | ------------------------------------------------------ | ----------- | -------------------------------- | -------------------- |
| self             | This query filter                                      | QueryFilter | not null                         | READ                 |

## Local Properties

| Property         | Description                                            | Type        | Constraints                      | Supported operations |
| :--------------: | ------------------------------------------------------ | ----------- | -------------------------------- | -------------------- |
| id               | QueryFilter id                                         | String      | not null                         | READ                 |

## Query Filter [/api/v3/queries/filters/{id}]

+ Model
    + Body

            {
              "_type": "QueryFilter",
              "id": "status",
              "_links": {
                "self": {
                  "href": "/api/v3/queries/filters/status",
                  "title": "Status"
                }
              }
            }

## View Query Filter [GET]

Retreive an individual QueryFilter as identified by the id parameter.

+ Parameters
    + id (required, string, `status`) ... QueryFilter identifier.

+ Response 200 (application/hal+json)

    [Query Filter][]

+ Response 403 (application/hal+json)

    Returned if the client does not have sufficient permissions to see it.

    **Required permission:** view work package in any project

    + Body

            {
                "_type": "Error",
                "errorIdentifier": "urn:openproject-org:api:v3:errors:Unauthenticated",
                "message": "You need to be authenticated to access this resource."
            }

+ Response 404 (application/hal+json)

    Returned if the QueryFilter does not exist.

    + Body

            {
                "_type": "Error",
                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                "message": "The specified query does not exist."
            }

# Group Query Operators

A QueryOperator can be referenced by a QueryFilter to denote the operator to be applied to the filter relation.

## Actions

| Link                | Description                                                          | Condition                              |
|:-------------------:|----------------------------------------------------------------------| ---------------------------------------|

As of now, no actions are defined.

## Linked Properties

| Property         | Description                                            | Type          | Constraints                      | Supported operations |
| :--------------: | ------------------------------------------------------ | -----------   | -------------------------------- | -------------------- |
| self             | This query operator                                    | QueryOperator | not null                         | READ                 |

## Local Properties

| Property         | Description                                            | Type        | Constraints                      | Supported operations |
| :--------------: | ------------------------------------------------------ | ----------- | -------------------------------- | -------------------- |
| id               | Query oprator id                                       | String      | not null                         | READ                 |
| name             | Query operator name                                    | String      | not null                         | READ                 |

## Query Operator [/api/v3/queries/operators/{id}]

+ Model
    + Body

            {
              "_type": "QueryOperator",
              "id": "!",
              "name": "is not",
              "_links": {
                "self": {
                  "href": "/api/v3/queries/operators/!",
                  "title": "is not"
                }
              }
            }

## View Query Operator [GET]

Retreive an individual QueryOperator as identified by the `id` parameter.

+ Parameters
    + id (required, string, `!`) ... QueryOperator id

+ Response 200 (application/hal+json)

    [Query Operator][]

+ Response 403 (application/hal+json)

    Returned if the client does not have sufficient permissions to see it.

    **Required permission:** view work package in any project

    + Body

            {
                "_type": "Error",
                "errorIdentifier": "urn:openproject-org:api:v3:errors:Unauthenticated",
                "message": "You need to be authenticated to access this resource."
            }

+ Response 404 (application/hal+json)

    Returned if the QueryOperator does not exist.

    + Body

            {
                "_type": "Error",
                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                "message": "The specified query does not exist."
            }

# Group Query Sort Bys

A QuerySortBy can be referenced by a Query to denote the sorting applied to the query's work package results. It consists of the columns to sort by as well as the direction (ascending/descending)

## Actions

| Link                | Description                                                          | Condition                              |
|:-------------------:|----------------------------------------------------------------------| ---------------------------------------|

As of now, no actions are defined.

## Linked Properties

| Property         | Description                                                                                                                                                                                                               | Type        | Constraints                      | Supported operations |
| :--------------: | ------------------------------------------------------                                                                                                                                                                    | ----------- | -------------------------------- | -------------------- |
| self             | This query sort by                                                                                                                                                                                                        | QuerySortBy | not null                         | READ                 |
| column           | The QueryColumn to sort on.                                                                                                                                                                                               | QueryColumn | not null                         | READ                 |
| direction        | The direction the QueryColumn is to be sorted in. This property is identified by a URI (`urn:openproject-org:api:v3:queries:directions:asc` or `urn:openproject-org:api:v3:queries:directions:desc`) instead of by a URL. |             | not null                         | READ                 |

## Local Properties

| Property         | Description                                            | Type        | Constraints                      | Supported operations |
| :--------------: | ------------------------------------------------------ | ----------- | -------------------------------- | -------------------- |
| id               | QuerySortBy id                                         | String      | not null                         | READ                 |
| name             | QuerySortBy name                                       | String      | not null                         | READ                 |

## Query Sort By [/api/v3/queries/sort_bys/{id}]

+ Model
    + Body

            {
              "_type": "QuerySortBy",
              "id": "status-asc",
              "name": "Status (Ascending)",
              "_links": {
                "self": {
                  "href": "/api/v3/queries/sort_bys/status-asc",
                  "title": "Status (Ascending)"
                },
                "column": {
                  "href": "/api/v3/queries/columns/status",
                  "title": "Status"
                },
                "direction": {
                  "href": "urn:openproject-org:api:v3:queries:directions:asc",
                  "title": "Ascending"
                }
              }
            }

## View Query Sort By [GET]

Retreive an individual QuerySortBy as identified by the id parameter.

+ Parameters
    + id (required, string, `status-asc`) ... QuerySortBy identifier. The identifier is a combination of the column identifier and the direction.

+ Response 200 (application/hal+json)

    [Query Sort By][]

+ Response 403 (application/hal+json)

    Returned if the client does not have sufficient permissions to see it.

    **Required permission:** view work package in any project

    + Body

            {
                "_type": "Error",
                "errorIdentifier": "urn:openproject-org:api:v3:errors:Unauthenticated",
                "message": "You need to be authenticated to access this resource."
            }

+ Response 404 (application/hal+json)

    Returned if the QuerySortBy does not exist.

    + Body

            {
                "_type": "Error",
                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                "message": "The specified query does not exist."
            }
